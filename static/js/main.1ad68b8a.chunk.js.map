{"version":3,"sources":["CartItem.js","Cart.js","Navbar.js","App.js","index.js"],"names":["styles","image","height","width","borderRadius","backgroundColor","CartItem","props","product","item","price","qty","onIncreaseQuantity","onDecreaseQuantity","onDeleteProduct","className","jsx","style","src","img","fontSize","color","alt","onClick","id","Cart","products","map","key","cartIcon","marginRight","nav","background","display","justifyContent","alignItems","cartIconContainer","position","cartCount","padding","right","top","Navbar","count","App","handleIncreaseQuantity","state","index","indexOf","db","collection","doc","update","then","console","log","catch","error","handleDecreaseQuantity","handleDeleteProduct","delete","getCartCount","forEach","getTotalAmount","totalamount","addProduct","add","docRef","err","loading","firebase","this","orderBy","onSnapshot","snapshot","docs","data","setState","React","Component","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ad68b8a.chunk.js","sourcesContent":["import React from 'react';\r\n// class CartItem extends React.Component{\r\n    // render(){\r\n    // testing () {\r\n    //     const promise = new Promise((resolve, reject) => {\r\n    //         setTimeout(() => {\r\n    //             resolve('done');\r\n    //         }, 5000);\r\n    //     })\r\n\r\n    //     promise.then(() => {\r\n    //         // setState acts like a synchronous call\r\n    //         this.setState({ qty: this.state.qty+10 });\r\n    //         this.setState({ qty: this.state.qty+10 });\r\n    //         this.setState({ qty: this.state.qty+10 });\r\n\r\n    //         console.log('state', this.state);\r\n    //     });\r\n    // }\r\n// handling increase and decrease in quantity via state\r\n    // increaseQuantity = () => {\r\n    //     // console.log('this', this.state);\r\n    //     // setState form-1\r\n    //     // this.setState({\r\n    //     //     qty: this.state.qty+1\r\n    //     // });\r\n\r\n    //     // setstate form-2 using previous state\r\n    //     this.setState((prevState) => {\r\n    //         return {qty: this.state.qty + 1}\r\n    //     // },() => {\r\n    //     //     console.log('this.state', this.state);\r\n    //     });\r\n    // }\r\n\r\n    // decreaseQuantity = () => {\r\n    //     // check for if qty is 0\r\n    //     const{qty} = this.state;\r\n    //     if(qty===0){\r\n    //         return;\r\n    //     }\r\n    //     this.setState((prevState) => {\r\n    //         return {qty: this.state.qty - 1}\r\n    //     });\r\n    // }\r\n\r\n    const CartItem = (props) => {\r\n    \r\n        // console.log('this.props', props);\r\n        const{ item, price, qty}=props.product;\r\n        const{ product, onIncreaseQuantity, onDecreaseQuantity, onDeleteProduct }= props;\r\n        return(\r\n            <div className=\"cart-item\">\r\n                {props.jsx}\r\n                <div className=\"left-block\">\r\n                    <img style={styles.image} src={product.img} />\r\n                </div>\r\n                <div className=\"right-block\">\r\n                    <div style={ {fontSize: 25} }>{item}</div>\r\n                    <div style={ {color: '#777'} }>rs {price}</div>\r\n                    <div style={ {color: 'cyan'} }>Qty {qty}</div>\r\n                    <div className=\"cart-item-actions\">\r\n                        {/* action buttons */}\r\n                        <img alt=\"increse\" className=\"action-icons\" src=\"https://image.flaticon.com/icons/svg/1828/1828817.svg\" \r\n                        onClick={() => onIncreaseQuantity(product) }></img>\r\n                        <img alt=\"decrese\" className=\"action-icons\" src=\"https://image.flaticon.com/icons/svg/992/992514.svg\" \r\n                        onClick={() => onDecreaseQuantity(product) }></img>\r\n                        <img alt=\"delete\" className=\"action-icons\" src=\"https://image.flaticon.com/icons/svg/1345/1345874.svg\"\r\n                        onClick={() => onDeleteProduct(product.id)}></img>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\nconst styles={\r\n    image: {\r\n        height: 110,\r\n        width: 110,\r\n        borderRadius:10,\r\n        backgroundColor: '#ccc'\r\n    }\r\n}\r\nexport default CartItem;","import React from 'react';\r\n// import './index.css';\r\nimport CartItem from './CartItem';\r\nconst Cart = (props) => {\r\n    const {products}= props;\r\n    return (\r\n        <div className=\"cart\">\r\n            {/* {arr.map((item) => {\r\n                  return item+5          list rendering\r\n               }) } */}\r\n            <h1>Cart</h1>\r\n            {products.map((product) => {\r\n                return (\r\n                 <CartItem \r\n                    product={product} \r\n                    key={product.id}\r\n                    onIncreaseQuantity={props.onIncreaseQuantity}                        onDecreaseQuantity={props.onDecreaseQuantity}\r\n                    onDeleteProduct={props.onDeleteProduct}\r\n                 />\r\n                )\r\n            }) }\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div style={styles.nav}>\r\n      <div style={styles.cartIconContainer}>\r\n        <img style={styles.cartIcon} src=\"https://image.flaticon.com/icons/svg/2121/2121815.svg\" alt=\"cart-icon\" />\r\n        <span style={styles.cartCount}> {props.count} </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  cartIcon: {\r\n    height: 32,\r\n    marginRight: 30\r\n  },\r\n  nav: {\r\n    height: 70,\r\n    background: '#4267b2',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center'\r\n  },\r\n  cartIconContainer: {\r\n    position: 'relative'\r\n  },\r\n  cartCount: {\r\n    background: 'violet',\r\n    borderRadius: '50%',\r\n    padding: '4px 8px',\r\n    position: 'absolute',\r\n    right: 12,\r\n    top: -9\r\n  }\r\n};\r\n\r\n\r\nexport default Navbar;","import React from 'react';\nimport Cart from './Cart';\nimport Navbar from './Navbar';\nimport * as firebase from 'firebase';\n\nclass App extends React.Component {\n\n  constructor () {\n    super();\n    this.state = {\n        products: [],\n        loading: true\n    }\n    this.db = firebase.firestore();\n  }\n    // initial products\n    // {\n    //   item: 'Mobile Phone',\n    //   price: 999,\n    //   qty: 1,\n    //   img: 'https://images.unsplash.com/photo-1512499617640-c74ae3a79d37?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=966&q=80',\n    //   id: 1\n    // },\n    // {\n    //     item: 'Watch',\n    //     price: 199,\n    //     qty: 9,\n    //     img: 'https://images.unsplash.com/photo-1524805444758-089113d48a6d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=334&q=80',\n    //     id: 2\n    // },{\n    //     item: 'Laptop',\n    //     price: 58999,\n    //     qty: 1,\n    //     img: 'https://images.unsplash.com/photo-1587613725874-d9a1e8e23f6b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=328&q=80',\n    //     id:3\n    // }\n    // either this binding here in constructor or we can use arrow functions for default binding\n    // this.increaseQuantity=this.increaseQuantity.bind(this);\n\n    // this.testing();\n\n  componentDidMount () {\n    this.db\n      .collection('products')\n      // .where('price', '==', 99)\n      // .where('item', '==', 'Mug')\n      .orderBy('price', \"desc\")\n      .onSnapshot((snapshot) => {\n        console.log(snapshot);\n\n        snapshot.docs.map((doc) => {\n          console.log(doc.data());\n        })\n\n        const products=snapshot.docs.map((doc) => {\n          const data = doc.data();\n          data['id']=doc.id;\n          return data;\n        })\n\n        this.setState({\n          products,\n          loading: false\n        })\n      })\n      // .get()\n      // .then()\n  }\n\n  handleIncreaseQuantity = (product) => {\n      // console.log('heyy, please increase tthe quantity of', product);\n      const { products } = this.state;\n      const index= products.indexOf(product);\n      // products[index].qty += 1;\n\n      // this.setState({\n      //     products: products\n      // })\n\n    const docRef = this.db.collection('products').doc(products[index].id);\n    docRef\n      .update({\n        qty: products[index].qty+1\n      })\n      .then(() => {\n        console.log('updated successfully');\n      })\n      .catch((error) => {\n        console.log('Error: ', error);\n      })\n  }\n  handleDecreaseQuantity = (product) => {\n      const { products } = this.state;\n      if(product.qty===0){\n          return;\n      }\n      const index= products.indexOf(product);\n      // products[index].qty -= 1;\n\n      // this.setState({\n      //     products: products\n      // })\n      const docRef = this.db.collection('products').doc(products[index].id);\n    docRef\n      .update({\n        qty: products[index].qty-1\n      })\n      .then(() => {\n        console.log('updated successfully');\n      })\n      .catch((error) => {\n        console.log('Error: ', error);\n      })\n  }\n\n  handleDeleteProduct = (id) => {\n      const {products} = this.state;\n\n      // const items = products.filter((item) => item.id !== id); //[{}]\n      // this.setState({\n      //     products: items\n      // })\n      const docRef = this.db.collection('products').doc(id);\n      docRef\n        .delete()\n        .then(() => {\n          console.log('deleted successfully');\n        })\n        .catch((error) => {\n          console.log('Error: ', error);\n        })\n  }\n\n  getCartCount = () => {\n    const { products } = this.state;\n    let count=0;\n    products.forEach((product) => {\n      count += product.qty;\n    })\n\n\n    return count;\n  }\n\n  getTotalAmount = () => {\n    const {products} = this.state;\n    let totalamount=0;\n\n    products.forEach((product) => {\n      totalamount += product.qty*product.price;\n    })\n    return totalamount;\n  }\n\n  addProduct = () => {\n    this.db\n      .collection('products')\n      .add({\n        img: '',\n        price: 10999,\n        qty: 1,\n        item: 'Washing Machine'\n      })\n      .then((docRef) => {\n        console.log('product has been added', docRef);\n      })\n      .catch((err) => {\n        console.log('Error :', err);\n      })\n  }\n\n  render(){\n    const {products, loading} = this.state;\n    return (\n      <div className=\"App\">\n        <Navbar count={this.getCartCount()}/>\n        {/* <button onClick={this.addProduct} style={{padding: 20,margin: 10, fontSize: 18}}>Add a Product</button> */}\n        <Cart\n           products={products}\n           onIncreaseQuantity={this.handleIncreaseQuantity}\n           onDecreaseQuantity={this.handleDecreaseQuantity}\n           onDeleteProduct={this.handleDeleteProduct}\n        \n        />\n        {loading && <h1>Loading items....</h1>}\n\n    <div style={{padding: 10, fontSize: 20}}>Total Amount: {this.getTotalAmount()}</div>\n\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAJHjBB0gyYvgye6d1n4H6K2ziUDtIZbRY\",\n  authDomain: \"cart-f7c11.firebaseapp.com\",\n  databaseURL: \"https://cart-f7c11.firebaseio.com\",\n  projectId: \"cart-f7c11\",\n  storageBucket: \"cart-f7c11.appspot.com\",\n  messagingSenderId: \"1030343983605\",\n  appId: \"1:1030343983605:web:198d3b408f3917ae36e0bc\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}